{"version":3,"sources":["assets/css/Header.module.css","assets/css/Box.module.css","assets/css/PlayOneMore.module.css","assets/css/GamePage.module.css","components/Header.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","assets/utils.js","components/Box.jsx","components/Game.jsx","components/PlayOneMore.jsx","pages/GamePage.jsx"],"names":["module","exports","Header","score","turn","counter","className","styles","container","scoreBox","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","random","min","max","Math","ceil","floor","Box","value","index","markBox","onClick","box","Game","forwardRef","props","ref","player","AI","players","onComplete","sync","initialGameConfig","field","fill","finished","useState","game","setGame","useImperativeHandle","init","figure","useCallback","prev","next","useEffect","whereToGo","array","playerFigure","computerFigure","conterAttack","showMeWereToGo","resultArray","i","combinations","length","a","b","c","filtered","filter","el","push","goHereAndYouWillWin","anywhere","findStrategy","timeout","setTimeout","clearTimeout","combination","findWinner","includes","map","PlayOneMore","winner","finish","initNewGame","controls","confirm","decline","GamePage","config","setConfig","gameRef","useRef","history","useHistory","setWinner","setCounter","setTurn","player_1","player_2","initialConfig","current","nextTurnPlayer","AI_mode","exit","to"],"mappings":"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","file":"static/js/3.1586f2f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__25M9o\",\"scoreBox\":\"Header_scoreBox__34b8V\",\"score\":\"Header_score__1BSR4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Box_box__2LKQ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlayOneMore_container__1HmSK\",\"controls\":\"PlayOneMore_controls__1_VYM\",\"confirm\":\"PlayOneMore_confirm__3Zh3O\",\"decline\":\"PlayOneMore_decline__-RDIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exit\":\"GamePage_exit__3usvM\"};","import React from 'react';\nimport styles from '../assets/css/Header.module.css';\n\nexport const Header = ({score, turn, counter}) => {\n    return (\n        <div className={styles.container}>\n            <span>Move: {counter}</span>\n            <div className={styles.scoreBox}>\n                <span>Player 1 / Player 2</span>\n                <span className={styles.score}>{score}</span>\n            </div>\n            <span>Turn: {turn}</span>\n        </div>\n    );\n};","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {combinations} from \"./initialConfig\";\n\nexport const findWinner = (array) => {\n    for (let i = 0; i < combinations.length; i++) {\n        let [a, b, c] = combinations[i];\n        if (array[a] && array[a] === array[b] && array[a] === array[c]) {\n            return combinations[i];\n        }\n    }\n    return null;\n}\n\nexport const findStrategy = (array, playerFigure, computerFigure) => {\n    const showMeWereToGo = (figure) => {\n        let resultArray = [];\n        for (let i = 0; i < combinations.length; i++) {\n            let [a, b, c] = combinations[i];\n            if ((array[a] || array[b] || array[c]) && (\n                (array[a] === figure && array[b] === figure) ||\n                (array[b] === figure && array[c] === figure) ||\n                (array[a] === figure && array[c] === figure))) {\n                const filtered = [a, b, c].filter(el => array[el] === null);\n                if (filtered.length) {\n                    resultArray.push(filtered[0]);\n                }\n            }\n        }\n        return resultArray;\n    }\n\n    let goHereAndYouWillWin = showMeWereToGo(computerFigure);\n    let conterAttack;\n    let anywhere = [];\n\n    if (!goHereAndYouWillWin.length) {\n        conterAttack = showMeWereToGo(playerFigure);\n        if (!conterAttack.length) {\n            for (let i = 0; i < array.length; i++) {\n                array[i] === null && anywhere.push(i);\n            }\n        }\n    }\n    return goHereAndYouWillWin.length ? goHereAndYouWillWin : conterAttack.length ? conterAttack : anywhere;\n}\n\nexport const random = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n","import React from 'react';\nimport styles from '../assets/css/Box.module.css';\n\nexport const Box = ({value, index, markBox}) => {\n\n    const clickHandler = () => {\n        markBox && markBox(index);\n    }\n\n    return (\n        <div onClick={clickHandler} className={styles.box}>\n            {value}\n        </div>\n    );\n}","import React, {forwardRef, useCallback, useEffect, useImperativeHandle, useState} from 'react';\nimport {findStrategy, findWinner, random} from '../assets/utils';\nimport {Box} from './Box';\n\nexport const Game = forwardRef((props, ref) => {\n    const {AI, players, onComplete, sync} = props;\n    const initialGameConfig = {\n        counter: 0,\n        field: new Array(9).fill(null),\n        finished: false,\n    };\n    const [game, setGame] = useState(initialGameConfig);\n\n    useImperativeHandle(ref, () => ({\n        init() {\n            setGame(initialGameConfig);\n        },\n    }));\n\n    let player;\n    if (players[0].figure === 'X') {\n        player = game.counter % 2 === 0 ? players[0] : players[1];\n    } else {\n        player = game.counter % 2 === 0 ? players[1] : players[0];\n    }\n\n    const markBox = useCallback((index) => {\n        if (game.field[index]) return;\n\n        setGame((prev) => {\n            const next = {...prev, counter: prev.counter + 1, field: [...prev.field]};\n            next.field[index] = player.figure;\n            return next;\n        });\n    }, [player, game, setGame]);\n\n    useEffect(() => {\n\t\tsync && sync(player, game.counter)\n    }, [sync, player, game.counter])\n\n    useEffect(() => {\n        if (!AI || player !== players[1] || game.finished) {\n            return;\n        }\n\n        const whereToGo = findStrategy(game.field, players[0].figure, players[1].figure);\n        const i = random(0, whereToGo.length - 1);\n        const timeout = setTimeout(() => markBox(whereToGo[i]), random(300, 2000));\n\n        return () => clearTimeout(timeout);\n    }, [game, player, AI, markBox, players]);\n\n    useEffect(() => {\n        if (game.finished) return;\n\n        const combination = findWinner(game.field);\n        if (combination) {\n            const figure = game.field[combination[0]];\n            setGame({\n                ...game,\n                finished: true,\n            });\n            return onComplete && onComplete(figure);\n        }\n\n        const haveMoreBoxes = game.field.includes(null);\n        if (!haveMoreBoxes) {\n            setGame({\n                ...game,\n                finished: true,\n            });\n            return onComplete && onComplete();\n        }\n    }, [game, setGame, onComplete]);\n\n\n    return (\n        <div className={'field'}>\n            {\n                game.field.map((figure, i) => (\n                    <Box value={figure}\n                         index={i}\n                         key={i}\n                         markBox={AI && player === players[1] ? null : markBox}\n                    />\n                ))\n            }\n        </div>\n    );\n});\n","import React from 'react';\nimport styles from '../assets/css/PlayOneMore.module.css';\n\nexport const PlayOneMore = ({winner, finish, initNewGame, AI}) => {\n    return (\n        <div className={styles.container}>\n            <span>Winner: {AI && winner === 'Player 2' ? 'Computer' : winner}</span>\n            <p>Would you like to play one more time ?</p>\n            <div className={styles.controls}>\n                <span className={styles.confirm} onClick={initNewGame}>Yes</span>\n                <span className={styles.decline} onClick={finish}>No</span>\n            </div>\n        </div>\n    );\n}","import React, { useState, useCallback, useRef } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { Header } from '../components/Header';\nimport { Game } from '../components/Game';\nimport { PlayOneMore } from '../components/PlayOneMore';\nimport { initialConfig } from '../assets/initialConfig';\nimport styles from '../assets/css/GamePage.module.css';\n\nconst GamePage = ({ config, setConfig }) => {\n\tconst gameRef = useRef();\n\tconst history = useHistory();\n\tconst [ winner, setWinner ] = useState(null);\n\tconst [ counter, setCounter ] = useState(0);\n\tconst [ turn, setTurn ] = useState(null);\n\n\tconst score = `${config.player_1.score} / ${config.player_2.score}`;\n\n\tconst finish = useCallback(() => {\n\t\tsetConfig(initialConfig);\n\t\thistory.push('/');\n\t}, [ setConfig, history ]);\n\n\tconst initNewGame = useCallback(() => {\n\t\tsetWinner(null);\n\t\tsetCounter(0);\n\t\tgameRef.current.init();\n\t}, [ setWinner ]);\n\n\tconst onComplete = useCallback((figure) => {\n\t\tlet winner = 'Nobody won';\n\n\t\tif ( figure ) {\n\t\t\twinner = config.player_1.figure === figure ? 'Player 1' : 'Player 2';\n\t\t}\n\n\t\tsetWinner(winner);\n\t\tsetConfig({\n\t\t\t...config,\n\t\t\tplayer_1: {\n\t\t\t\t...config.player_1,\n\t\t\t\tscore: winner === 'Player 1' ? config.player_1.score + 1 : config.player_1.score,\n\t\t\t},\n\t\t\tplayer_2: {\n\t\t\t\t...config.player_2,\n\t\t\t\tscore: winner === 'Player 2' ? config.player_2.score + 1 : config.player_2.score,\n\t\t\t},\n\t\t});\n\t}, [ setConfig, config ]);\n\n\tconst sync = useCallback((nextTurnPlayer, counter) => {\n\t\tsetCounter(counter);\n\t\tsetTurn(nextTurnPlayer === config.player_1 ? 'Player 1' : 'Player 2');\n\t}, [config, setCounter, setTurn ]);\n\n\treturn !config.init ? <Redirect to={'/'}/> : (\n\t\t<div className={'page'}>\n\t\t\t<Header score={score} counter={counter} turn={turn}/>\n\t\t\t<Game ref={gameRef}\n\t\t\t      AI={config.AI_mode}\n\t\t\t      players={[ config.player_1, config.player_2 ]}\n\t\t\t      onComplete={onComplete}\n\t\t\t      sync={sync}\n\t\t\t/>\n\t\t\t{\n\t\t\t\twinner && <PlayOneMore finish={finish} AI={config.AI_mode}\n\t\t\t\t                       winner={winner}\n\t\t\t\t                       initNewGame={initNewGame}/>\n\t\t\t}\n\t\t\t<span className={styles.exit} onClick={finish}>Exit</span>\n\t\t</div>\n\t);\n};\n\nexport default GamePage;\n"],"sourceRoot":""}